From 424df996d41b6416ad138378cb37c9ae15d138bd Mon Sep 17 00:00:00 2001
From: Elliott Hughes <enh@google.com>
Date: Wed, 23 Oct 2013 09:48:29 -0700
Subject: [PATCH] Add epoll_create1

This is partial cherry-pick from cac7b9d6ec1a09814bc028e2f768db732f018891

Change-Id: I2966453cb54ba685cbe8a192070ba2e7b27b2d51
---
 libc/Android.mk                         |  1 +
 libc/SYSCALLS.TXT                       |  2 +-
 libc/arch-arm/syscalls.mk               |  2 +-
 libc/arch-arm/syscalls/epoll_create.S   | 15 ---------------
 libc/arch-arm/syscalls/epoll_create1.S  | 15 +++++++++++++++
 libc/arch-mips/syscalls.mk              |  2 +-
 libc/arch-mips/syscalls/epoll_create.S  | 22 ----------------------
 libc/arch-mips/syscalls/epoll_create1.S | 22 ++++++++++++++++++++++
 libc/arch-x86/syscalls.mk               |  2 +-
 libc/arch-x86/syscalls/epoll_create.S   | 21 ---------------------
 libc/arch-x86/syscalls/epoll_create1.S  | 21 +++++++++++++++++++++
 libc/bionic/epoll_create.cpp            | 33 +++++++++++++++++++++++++++++++++
 libc/include/sys/epoll.h                |  9 ++++++---
 13 files changed, 102 insertions(+), 65 deletions(-)
 delete mode 100644 libc/arch-arm/syscalls/epoll_create.S
 create mode 100644 libc/arch-arm/syscalls/epoll_create1.S
 delete mode 100644 libc/arch-mips/syscalls/epoll_create.S
 create mode 100644 libc/arch-mips/syscalls/epoll_create1.S
 delete mode 100644 libc/arch-x86/syscalls/epoll_create.S
 create mode 100644 libc/arch-x86/syscalls/epoll_create1.S
 create mode 100644 libc/bionic/epoll_create.cpp

diff --git a/libc/Android.mk b/libc/Android.mk
index c538aa7..d28252b 100644
--- a/libc/Android.mk
+++ b/libc/Android.mk
@@ -205,6 +205,7 @@ libc_bionic_src_files := \
     bionic/brk.cpp \
     bionic/dirent.cpp \
     bionic/__errno.c \
+    bionic/epoll_create.cpp \
     bionic/eventfd_read.cpp \
     bionic/eventfd_write.cpp \
     bionic/futimens.cpp \
diff --git a/libc/SYSCALLS.TXT b/libc/SYSCALLS.TXT
index 88c980f..ce6cb8a 100644
--- a/libc/SYSCALLS.TXT
+++ b/libc/SYSCALLS.TXT
@@ -305,7 +305,7 @@ long    perf_event_open(struct perf_event_attr *attr_uptr, pid_t pid, int cpu, i
 int	futex(void *, int, int, void *, void *, int) 1
 
 # epoll
-int     epoll_create(int size)     1
+int     epoll_create1(int size)     1
 int     epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)    1
 int     epoll_wait(int epfd, struct epoll_event *events, int max, int timeout)   1
 
diff --git a/libc/arch-arm/syscalls.mk b/libc/arch-arm/syscalls.mk
index 252a428..e17705b 100644
--- a/libc/arch-arm/syscalls.mk
+++ b/libc/arch-arm/syscalls.mk
@@ -196,7 +196,7 @@ syscall_src += arch-arm/syscalls/sysinfo.S
 syscall_src += arch-arm/syscalls/personality.S
 syscall_src += arch-arm/syscalls/perf_event_open.S
 syscall_src += arch-arm/syscalls/futex.S
-syscall_src += arch-arm/syscalls/epoll_create.S
+syscall_src += arch-arm/syscalls/epoll_create1.S
 syscall_src += arch-arm/syscalls/epoll_ctl.S
 syscall_src += arch-arm/syscalls/epoll_wait.S
 syscall_src += arch-arm/syscalls/inotify_init.S
diff --git a/libc/arch-arm/syscalls/epoll_create.S b/libc/arch-arm/syscalls/epoll_create.S
deleted file mode 100644
index b2894e6..0000000
--- a/libc/arch-arm/syscalls/epoll_create.S
+++ /dev/null
@@ -1,15 +0,0 @@
-/* autogenerated by gensyscalls.py */
-#include <asm/unistd.h>
-#include <linux/err.h>
-#include <machine/asm.h>
-
-ENTRY(epoll_create)
-    mov     ip, r7
-    ldr     r7, =__NR_epoll_create
-    swi     #0
-    mov     r7, ip
-    cmn     r0, #(MAX_ERRNO + 1)
-    bxls    lr
-    neg     r0, r0
-    b       __set_errno
-END(epoll_create)
diff --git a/libc/arch-arm/syscalls/epoll_create1.S b/libc/arch-arm/syscalls/epoll_create1.S
new file mode 100644
index 0000000..d05451d
--- /dev/null
+++ b/libc/arch-arm/syscalls/epoll_create1.S
@@ -0,0 +1,15 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+#include <linux/err.h>
+#include <machine/asm.h>
+
+ENTRY(epoll_create1)
+    mov     ip, r7
+    ldr     r7, =__NR_epoll_create1
+    swi     #0
+    mov     r7, ip
+    cmn     r0, #(MAX_ERRNO + 1)
+    bxls    lr
+    neg     r0, r0
+    b       __set_errno
+END(epoll_create1)
diff --git a/libc/arch-mips/syscalls.mk b/libc/arch-mips/syscalls.mk
index 23393a2..994f114 100644
--- a/libc/arch-mips/syscalls.mk
+++ b/libc/arch-mips/syscalls.mk
@@ -199,7 +199,7 @@ syscall_src += arch-mips/syscalls/sysinfo.S
 syscall_src += arch-mips/syscalls/personality.S
 syscall_src += arch-mips/syscalls/perf_event_open.S
 syscall_src += arch-mips/syscalls/futex.S
-syscall_src += arch-mips/syscalls/epoll_create.S
+syscall_src += arch-mips/syscalls/epoll_create1.S
 syscall_src += arch-mips/syscalls/epoll_ctl.S
 syscall_src += arch-mips/syscalls/epoll_wait.S
 syscall_src += arch-mips/syscalls/inotify_init.S
diff --git a/libc/arch-mips/syscalls/epoll_create.S b/libc/arch-mips/syscalls/epoll_create.S
deleted file mode 100644
index 2f4ac7f..0000000
--- a/libc/arch-mips/syscalls/epoll_create.S
+++ /dev/null
@@ -1,22 +0,0 @@
-/* autogenerated by gensyscalls.py */
-#include <asm/unistd.h>
-    .text
-    .globl epoll_create
-    .align 4
-    .ent epoll_create
-
-epoll_create:
-    .set noreorder
-    .cpload $t9
-    li $v0, __NR_epoll_create
-    syscall
-    bnez $a3, 1f
-    move $a0, $v0
-    j $ra
-    nop
-1:
-    la $t9,__set_errno
-    j $t9
-    nop
-    .set reorder
-    .end epoll_create
diff --git a/libc/arch-mips/syscalls/epoll_create1.S b/libc/arch-mips/syscalls/epoll_create1.S
new file mode 100644
index 0000000..a13b495
--- /dev/null
+++ b/libc/arch-mips/syscalls/epoll_create1.S
@@ -0,0 +1,22 @@
+/* autogenerated by gensyscalls.py */
+#include <asm/unistd.h>
+    .text
+    .globl epoll_create1
+    .align 4
+    .ent epoll_create1
+
+epoll_create1:
+    .set noreorder
+    .cpload $t9
+    li $v0, __NR_epoll_create1
+    syscall
+    bnez $a3, 1f
+    move $a0, $v0
+    j $ra
+    nop
+1:
+    la $t9,__set_errno
+    j $t9
+    nop
+    .set reorder
+    .end epoll_create1
diff --git a/libc/arch-x86/syscalls.mk b/libc/arch-x86/syscalls.mk
index 11573de..beb58bc 100644
--- a/libc/arch-x86/syscalls.mk
+++ b/libc/arch-x86/syscalls.mk
@@ -200,7 +200,7 @@ syscall_src += arch-x86/syscalls/sysinfo.S
 syscall_src += arch-x86/syscalls/personality.S
 syscall_src += arch-x86/syscalls/perf_event_open.S
 syscall_src += arch-x86/syscalls/futex.S
-syscall_src += arch-x86/syscalls/epoll_create.S
+syscall_src += arch-x86/syscalls/epoll_create1.S
 syscall_src += arch-x86/syscalls/epoll_ctl.S
 syscall_src += arch-x86/syscalls/epoll_wait.S
 syscall_src += arch-x86/syscalls/inotify_init.S
diff --git a/libc/arch-x86/syscalls/epoll_create.S b/libc/arch-x86/syscalls/epoll_create.S
deleted file mode 100644
index 061f173..0000000
--- a/libc/arch-x86/syscalls/epoll_create.S
+++ /dev/null
@@ -1,21 +0,0 @@
-/* autogenerated by gensyscalls.py */
-#include <linux/err.h>
-#include <machine/asm.h>
-#include <asm/unistd.h>
-
-ENTRY(epoll_create)
-    pushl   %ebx
-    mov     8(%esp), %ebx
-    movl    $__NR_epoll_create, %eax
-    int     $0x80
-    cmpl    $-MAX_ERRNO, %eax
-    jb      1f
-    negl    %eax
-    pushl   %eax
-    call    __set_errno
-    addl    $4, %esp
-    orl     $-1, %eax
-1:
-    popl    %ebx
-    ret
-END(epoll_create)
diff --git a/libc/arch-x86/syscalls/epoll_create1.S b/libc/arch-x86/syscalls/epoll_create1.S
new file mode 100644
index 0000000..5972d49
--- /dev/null
+++ b/libc/arch-x86/syscalls/epoll_create1.S
@@ -0,0 +1,21 @@
+/* autogenerated by gensyscalls.py */
+#include <linux/err.h>
+#include <machine/asm.h>
+#include <asm/unistd.h>
+
+ENTRY(epoll_create1)
+    pushl   %ebx
+    mov     8(%esp), %ebx
+    movl    $__NR_epoll_create1, %eax
+    int     $0x80
+    cmpl    $-MAX_ERRNO, %eax
+    jb      1f
+    negl    %eax
+    pushl   %eax
+    call    __set_errno
+    addl    $4, %esp
+    orl     $-1, %eax
+1:
+    popl    %ebx
+    ret
+END(epoll_create1)
diff --git a/libc/bionic/epoll_create.cpp b/libc/bionic/epoll_create.cpp
new file mode 100644
index 0000000..1dfafa8
--- /dev/null
+++ b/libc/bionic/epoll_create.cpp
@@ -0,0 +1,33 @@
+/*
+ * Copyright (C) 2013 The Android Open Source Project
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <sys/epoll.h>
+
+int epoll_create(int /*obsolete_size*/) {
+  return epoll_create1(0);
+}
diff --git a/libc/include/sys/epoll.h b/libc/include/sys/epoll.h
index 38739aa..625f4c2 100644
--- a/libc/include/sys/epoll.h
+++ b/libc/include/sys/epoll.h
@@ -29,6 +29,7 @@
 #define _SYS_EPOLL_H_
 
 #include <sys/cdefs.h>
+#include <asm/fcntl.h> /* For O_CLOEXEC. */
 
 __BEGIN_DECLS
 
@@ -51,7 +52,9 @@ __BEGIN_DECLS
 #define EPOLL_CTL_DEL    2
 #define EPOLL_CTL_MOD    3
 
-typedef union epoll_data 
+#define EPOLL_CLOEXEC O_CLOEXEC
+
+typedef union epoll_data
 {
     void *ptr;
     int fd;
@@ -59,17 +62,17 @@ typedef union epoll_data
     unsigned long long u64;
 } epoll_data_t;
 
-struct epoll_event 
+struct epoll_event
 {
     unsigned int events;
     epoll_data_t data;
 };
 
 int epoll_create(int size);
+int epoll_create1(int flags);
 int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);
 int epoll_wait(int epfd, struct epoll_event *events, int max, int timeout);
 
 __END_DECLS
 
 #endif  /* _SYS_EPOLL_H_ */
-
